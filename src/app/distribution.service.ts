import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class DistributionService {

  TEST_DATA = [
    0,61,64,69,87,129,243,263,246,229,215,200,77,76,126,150,168,153,139,128,119,105,94,88,110,144,144,132,129,130,142,145,151,159,154,148,109,98,98,107,161,164,166,173,197,213,211,202,199,186,168,182,196,198,196,196,196,194,192,172,176,190,195,193,181,182,184,189,196,201,214,227,238,250,249,238,218,199,199,187,194,210,220,185,182,195,198,184,158,149,134,121,114,107,0,0,0,0,0,0,3,41,97,134,112,91,71,51,0,0,0,0,0,0,4,37,69,82,91,97,102,104,104,101,97,82,84,90,95,97,89,75,50,46,62,82,83,76,70,53,50,30,28,23,18,0,0,0,0,0,0,13,52,118,132,144,149,159,165,164,149,141,138,139,144,145,142,140,141,143,145,162,166,171,169,159,150,145,144,151,152,160,170,183,189,181,171,145,97,65,34,0,0,10,69,131,178,218,269,186,102,0,0,4,40,182,285,313,287,296,379,381,359,234,175,148,128,132,119,104,93,79,79,80,82,83,86,92,94,97,104,114,124,122,123,124,129,129,132,124,119,114,100,96,66,66,105,114,103,84,60,34,66,86,105,121,129,109,108,109,110,108,106,107,129,141,131,122,116,114,127,103,85,77,80,105,102,112,123,125,89,89,91,94,109,126,125,127,128,129,123,111,106,110,109,107,108,108,109,95,91,87,86,94,123,117,114,117,125,125,118,100,90,87,85,82,75,55,36,0,0,24,48,72,78,86,140,140,129,128,125,123,120,116,115,114,114,119,130,139,147,152,164,168,169,164,159,197,216,220,207,192,181,183,187,189,190,177,164,152,128,123,119,107,104,102,113,136,140,142,142,129,129,136,144,150,151,152,159,161,148,138,172,188,194,200,205,247,284,307,304,171,145,149,161,161,162,143,122,119,113,108,103,100,98,100,92,84,75,64,80,121,142,152,157,138,134,137,140,129,127,130,129,126,124,122,128,136,145,152,156,158,158,158,156,146,140,140,143,156,161,162,163,162,161,153,151,147,144,132,132,135,141,143,153,163,169,168,165,168,169,164,157,135,132,129,131,139,135,129,124,121,124,142,152,167,184,188,189,188,186,182,160,157,156,156,161,166,171,174,176,172,174,175,175,175,177,166,158,155,155,154,154,147,144,142,142,138,133,133,137,136,131,126,119,118,117,127,135,143,136,101,101,118,136,151,166,170,170,160,111,109,111,116,115,95,75,59,46,23,93,141,161,150,109,93,78,59,49,44,61,81,99,131,210,239,229,202,186,180,179,202,232,250,260,250,227,201,185,156,149,146,145,154,154,150,149,150,154,174,189,194,195,191,182,183,185,185,174,167,160,157,154,155,157,159,164,167,167,165,158,155,157,166,170,171,171,171,171,170,168,157,127,121,133,144,155,153,159,161,162,164,167,163,160,160,161,160,162,164,169,176,178,176,172,164,151,144,139,144,154,156,158,157,154,158,164,164,162,156,152,149,143,144,155,153,139,137,134,130,118,126,133,137,138,133,149,144
  ]

  constructor() { }

  getDistribution(values: Array<number>, step: number): any {
    var distributedValues: any = {}

    for (var value of values) {
      var distributionIndex = Math.trunc(value / step)
      if (!distributedValues[distributionIndex]) {
        distributedValues[distributionIndex] = 1
      } else {
        distributedValues[distributionIndex]++
      }
    }

    return distributedValues;
  }
}
